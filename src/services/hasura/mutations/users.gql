mutation edit_user(
  $id: uuid!
  $bio: String
  $name: String
  $pic_id: uuid
  $skills: jsonb
  $timezone: String
  $cover_id: uuid
  $languages: jsonb
  $socials: [user_socials_insert_input!]!
) {
  update_users_by_pk(
    pk_columns: { id: $id }
    _set: {
      bio: $bio
      cover_id: $cover_id
      languages: $languages
      name: $name
      pic_id: $pic_id
      skills: $skills
      timezone: $timezone
    }
  ) {
    ...current_user
  }
  delete_user_socials(where: { user_id: { _eq: $id } }) {
    affected_rows
  }
  insert_user_socials(objects: $socials) {
    affected_rows
  }
}

mutation update_gateway_id($id: uuid!, $gatewayId: String) {
  protocol {
    updateUser(input: { gatewayId: $gatewayId }) {
      id
    }
  }
  update_users_by_pk(
    pk_columns: { id: $id }
    _set: { username: $gatewayId, name: $gatewayId }
  ) {
    ...current_user
  }
}

mutation update_email(
  $id: uuid!
  $id_protocol: uuid!
  $email: citext!
  $email_protocol: String!
) {
  update_protocol_user(
    where: { id: { _eq: $id_protocol } }
    _set: { email: $email_protocol }
  ) {
    affected_rows
  }
  update_users_by_pk(pk_columns: { id: $id }, _set: { email_address: $email }) {
    ...current_user
  }
}

mutation delete_account($protocolId: String!, $userId: uuid!) {
  update_users_by_pk(
    pk_columns: { id: $userId }
    _set: {
      username: null
      wallet: null
      email_address: null
      deletedAt: "now()"
    }
  ) {
    ...current_user
  }
  protocol {
    deleteAccount(id: $protocolId)
  }
}
