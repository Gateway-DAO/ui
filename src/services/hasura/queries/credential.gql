query all_credentials {
  credentials {
    id
    name
    description
    categories
    created_at
    pow
    image
    uri
    status
    transaction_url
    gate {
      creator {
        id
        name
        username
        pfp
        picture {
          ...file
        }
      }
      holders {
        id
        name
        username
        pfp
        picture {
          ...file
        }
      }
    }
    dao {
      name
      slug
      logo {
        ...file
      }
    }
  }
}

query credential($id: uuid!) {
  credentials_by_pk(id: $id) {
    id
    target_id
    name
    description
    categories
    created_at
    pow
    image
    uri
    status
    transaction_url
    gate {
      type
      creator {
        id
        name
        picture {
          ...file
        }
      }
      holders {
        id
        name
        pfp
      }
      tasks {
        id
      }
    }
    dao {
      name
      slug
      logo {
        ...file
      }
    }
  }
}

query count_total_holders($id: uuid!) {
  credentials_aggregate(where: { gate_id: { _eq: $id } }) {
    aggregate {
      count
    }
  }
}

query holders_by_gate($id: uuid!, $offset: Int!) {
  gates_by_pk(id: $id) {
    holders(limit: 6, offset: $offset) {
      id
      name
      username
      pfp
      wallet
      picture {
        ...file
      }
    }
  }
}

query holders_by_search($id: uuid!, $search: String!, $offset: Int!) {
  gates_by_pk(id: $id) {
    title
    holders(
      where: { _or: { name: { _ilike: $search } } }
      limit: 6
      offset: $offset
    ) {
      id
      name
      username
      pfp
      wallet
      picture {
        ...file
      }
    }
  }
}

query credentials {
  credentials {
    id
  }
}

query findCredentialsByDataModel(
  $dataModelId: uuid!
  $take: Int!
  $skip: Int!
) {
  protocol_credential(
    where: {
      dataModelId: {_eq: $dataModelId}
    }
    offset: $skip
    limit: $take
  ) {
    ...protocol_credential_info

    issuerUser {
      gatewayId
      id
      gatewayUser {
        name
        wallet
        picture {
          ...file
        }
      }
    }

    issuerOrganization {
      gatewayId
      hasuraOrganization {
        name
        logo_url
        logo {
          ...file
        }
      }
    }

    recipientUser {
      gatewayId
      id
      gatewayUser {
        name
        wallet
        picture {
          ...file
        }
      }
    }
  }
}

query findCredentialsByIssuerUser(
  $issuerUserId: uuid!
  $take: Int!
  $skip: Int!
) {
  protocol_credential(
    where: {
      issuerUserId: {_eq: $issuerUserId}
    }
    offset: $skip
    limit: $take
  ) {
    ...protocol_credential_info

    issuerUser {
      gatewayId
      id
      gatewayUser {
        name
        wallet
        picture {
          ...file
        }
      }
    }

    issuerOrganization {
      gatewayId
      hasuraOrganization {
        name
        logo_url
        logo {
          ...file
        }
      }
    }

    recipientUser {
      gatewayId
      id
      gatewayUser {
        name
        wallet
        picture {
          ...file
        }
      }
    }
  }
}

query findCredentialsByIssuerOrganization(
  $issuerOrganizationId: uuid!
  $take: Int!
  $skip: Int!
) {
  protocol_credential(
    where: {
      issuerOrganizationId: {_eq: $issuerOrganizationId}
    }
    offset: $skip
    limit: $take
  ) {
    ...protocol_credential_info

    issuerUser {
      gatewayId
      id
      gatewayUser {
        name
        wallet
        picture {
          ...file
        }
      }
    }

    issuerOrganization {
      gatewayId
      hasuraOrganization {
        name
        logo_url
        logo {
          ...file
        }
      }
    }

    recipientUser {
      gatewayId
      id
      gatewayUser {
        name
        wallet
        picture {
          ...file
        }
      }
    }
  }
}

query findCredentialsByRecipientUser(
  $recipientUserId: uuid!
  $take: Int!
  $skip: Int!
) {
  protocol_credential(
    where: {
      recipientUserId: {_eq: $recipientUserId}
    }
    offset: $skip
    limit: $take
  ) {
    ...protocol_credential_info

    issuerUser {
      gatewayId
      id
      gatewayUser {
        name
        wallet
        picture {
          ...file
        }
      }
    }

    issuerOrganization {
      gatewayId
      hasuraOrganization {
        name
        logo_url
        logo {
          ...file
        }
      }
    }

    recipientUser {
      gatewayId
      id
      gatewayUser {
        name
        wallet
        picture {
          ...file
        }
      }
    }
  }
}
