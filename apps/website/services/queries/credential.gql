query all_credentials {
  credentials {
    id
    name
    description
    categories
    skills
    created_at
    pow
    image
    uri
    status
    transaction_url
    gate {
      creator {
        id
        name
        username
        pfp
        picture {
          ...file
        }
      }
      holders {
        id
        name
        username
        pfp
        picture {
          ...file
        }
      }
    }
    dao {
      name
      slug
      logo {
        ...file
      }
    }
  }
}

query credential($id: uuid!) {
  credentials_by_pk(id: $id) {
    id
    target_id
    name
    description
    categories
    skills
    created_at
    pow
    image
    uri
    status
    transaction_url
    gate {
      type
      creator {
        id
        name
        picture {
          ...file
        }
      }
      holders {
        id
        name
        pfp
      }
      tasks {
        id
      }
    }
    dao {
      name
      slug
      logo {
        ...file
      }
    }
  }
}


query credential_holders($gate_id: uuid!,$wallet: String!,$offset: Int!) {
  hasCredential: whitelisted_wallets_aggregate(where:{gate_id: {_eq: $gate_id}, user:{wallet:{_eq: $wallet}}}) {
    aggregate {
      count
    }
  }
  whitelisted_wallets_aggregate(where:{gate_id: {_eq: $gate_id}}) {
    aggregate {
      count
    }
  }
  whitelisted_wallets(order_by: {user:{ name: asc }}, limit: 15, offset: $offset, where: { gate_id: { _eq: $gate_id } }) {
    wallet
    user {
      id
      name
      username
      pfp
      picture {
        ...file
      }
    }
  }
}

# query credential_holders_search($gate_id: uuid!,$wallet: String!, $offset: Int!, $search: String) {
  # hasCredential: whitelisted_wallets_aggregate(where:{gate_id: {_eq: $gate_id}, user:{wallet:{_eq: $wallet}}}) {
  #   aggregate {
  #     count
  #   }
  # }
  # whitelisted_wallets_aggregate(where:{gate_id: {_eq: $gate_id}}) {
  #   aggregate {
  #     count
  #   }
  # }
#   whitelisted_wallets(order_by: { name: asc }, limit: 15, offset: $offset, where: { _or: [{ name: { _ilike: $search } }, { username: { _ilike: $search } }] }) {
#     wallet
#     user {
#       id
#       name
#       username
#       pfp
#       picture {
#         ...file
#       }
#     }
#   }
# }

mutation update_credential_status($id: uuid!, $status: credential_state!, $transaction_url: String!) {
  update_credentials_by_pk(pk_columns: { id: $id }, _set: { status: $status, transaction_url: $transaction_url }) {
    id
    target_id
    name
    description
    categories
    skills
    created_at
    pow
    image
    uri
    status
    transaction_url
    gate {
      creator {
        id
        name
        picture {
          id
          blur
        }
      }
      holders {
        id
        name
        username
        pfp
        picture {
          ...file
        }
      }
    }
    dao {
      name
      slug
      logo {
        ...file
      }
    }
  }
}
