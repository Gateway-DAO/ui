query all_credentials {
  credentials {
    id
    name
    description
    categories
    skills
    created_at
    pow
    image
    uri
    status
    transaction_url
    gate {
      creator {
        id
        name
        username
        pfp
        picture {
          ...file
        }
      }
      holders {
        id
        name
        username
        pfp
        picture {
          ...file
        }
      }
    }
    dao {
      name
      slug
      logo {
        ...file
      }
    }
  }
}

query credential($id: uuid!) {
  credentials_by_pk(id: $id) {
    id
    target_id
    name
    description
    categories
    skills
    created_at
    pow
    image
    uri
    status
    transaction_url
    gate {
      creator {
        id
        name
        picture {
          ...file
        }
      }
      holders {
        id
        name
        pfp
      }
      tasks {
        id
      }
    }
    dao {
      name
      slug
      logo {
        ...file
      }
    }
  }
}

query count_total_holders($id: uuid!) {
  credentials_aggregate(where: { gate_id: { _eq: $id } }) {
    aggregate {
      count
    }
  }
}

query holders_by_gate($id: uuid!, $offset: Int!) {
  gates_by_pk(id: $id) {
    holders(limit: 6, offset: $offset) {
      id
      name
      username
      pfp
      wallet
      picture {
        ...file
      }
    }
  }
}

query holders_by_search($id: uuid!, $search: String!, $offset: Int!) {
  gates_by_pk(id: $id) {
    title
    holders(
      where: { _or: { name: { _ilike: $search } } }
      limit: 6
      offset: $offset
    ) {
      id
      name
      username
      pfp
      wallet
      picture {
        ...file
      }
    }
  }
}

mutation update_credential_status(
  $id: uuid!
  $status: credential_state!
  $transaction_url: String!
) {
  update_credentials_by_pk(
    pk_columns: { id: $id }
    _set: { status: $status, transaction_url: $transaction_url }
  ) {
    id
    target_id
    name
    description
    categories
    skills
    created_at
    pow
    image
    uri
    status
    transaction_url
    gate {
      creator {
        id
        name
        picture {
          id
          blur
        }
      }
      holders {
        id
        name
        username
        pfp
        picture {
          ...file
        }
      }
    }
    dao {
      name
      slug
      logo {
        ...file
      }
    }
  }
}
